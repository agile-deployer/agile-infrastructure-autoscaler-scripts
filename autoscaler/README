This directory has all the script which make up the autoscaling logic and the creation of new webservers as a part of autoscaling.
To manipulate how many machines are running, you can set the variable NO_WEBSERVERS in the PerformScaling.sh script.
It's called autoscaling, but it doesn't really automatically scale the infrastructure, rather, the deployer has to monitor machine
activity and performance and set a fleet of webservers commensurate with the usage he/she is seeing. 
It is not really suitable, therefore to use this toolkit for classes of applications which expect to see sudden and unexpected 
spikes in traffic as it won't automatically scale up. However for applications which have relatively fixed usage on a day to day 
basis, such as membership only social networks and so on, then it can work quite well. 
To monitor the usage of your machines, you will get an email if disk space, memory usage or cpu usage are critical and also, an 
audit trail of low capacity is created and written to in the config directory which you can access from any machine

${HOME}/config/lowcpuaudit/webserver/${IP}/lowcpuaudittrail.dat (this is the one we are particularly intersted in)
${HOME}/config/lowdiskaudit/webserver/${IP}/lowdiskaudittrail.dat
${HOME}/config/lowmemoryaudit/webserver/${IP}/lowmemoryaudittrail.dat

You can also look in the directory, ${HOME}/config/cpuaggregator for stats on how the webserves are doing. 

In this way, you can see how your machines are performing and adjust how many of them are running through the PerformScaling.sh script.

Note, you will find two scripts related to this being called from cron, you could make as many of these as you like to give fine
grained control. These are scale up and scale down scripts. So, if you application is a local application (used or aimed at a
specific geography), then, you might want to start up more servers at 6 AM every day, ready for daytime usage and shut a few of 
them down at 6PM for the night when usage is lighter. To do this consistently, you can adjust your crontab to have the scale up and 
scale down scripts run according to your requirements. You can also make them scale up to higher or lower number of servers as you
require. 
So, there is some "work" to do as regards running this software, but, it's not so much that it takes huge amounts of time. 

